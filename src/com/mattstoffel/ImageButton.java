package com.mattstoffel;

import javafx.fxml.FXMLLoader;
import javafx.scene.Cursor;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

import java.awt.*;
import java.io.IOException;
import java.util.HashMap;


//simple button that holds info for the shape and behaviur of the buttons generated by the user.
public class ImageButton extends Button {
    // TODO: 5/24/20  first click does not generate a button

    double x;
    double y;
    Image image;
    String name;

    public ImageButton(Image image, String name, int heightAdjustment) {

        this.image = image;
        this.name = name;

        this.setOnMousePressed(click -> {
            if(click.isAltDown()){
                try {
                    showDisplayImage();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        //use this as a start position incase the user is rotating the image
            this.getParent().getScene().setCursor(Cursor.CLOSED_HAND);
            this.x = click.getSceneX();
            this.y = click.getSceneY();
        });

        this.setOnMouseDragged(drag -> {
            this.getParent().getScene().setCursor(Cursor.CLOSED_HAND);
        //rotates the button on the screen of the user is holding down control
        //otherwise moves button on the screen. probably can be done better
            if(drag.isControlDown()) {
                this.setRotate(-Math.toDegrees(Math.atan2(drag.getSceneX() - x, drag.getSceneY() - y)) - 135);
            }else {
                this.setTranslateX(drag.getSceneX()-(this.getScene().getWidth()/2));
                this.setTranslateY(drag.getSceneY()-((this.getScene().getHeight()/2) - (heightAdjustment/2)));
            }
        });

    //Cursor changes only not important to how things work
        this.setOnMouseEntered(event -> {
            this.getParent().getScene().setCursor(Cursor.OPEN_HAND);
        });
        this.setOnMouseExited(event -> {
            this.getParent().getScene().setCursor(Cursor.DEFAULT);
        });
        this.setOnMouseReleased(click -> {
            if(!this.isHover())
                this.getParent().getScene().setCursor(Cursor.DEFAULT);
            else
                this.getParent().getScene().setCursor(Cursor.OPEN_HAND);

        });
    //end cursor changes

        //Icon made by Freepik perfect from www.flaticon.com simply svg file.
        // Move this to its own style sheet
        this.setStyle(
                "-icon-paint: grey;\n" +
                "-fx-background-color: -icon-paint;\n" +
                "-size: 24;\n" +
                "-fx-min-height: -size;\n" +
                "-fx-min-width: -size;\n" +
                "-fx-max-height: -size;\n" +
                "-fx-max-width: -size;\n" +
                "-fx-shape: \"" +
                // Button shape
                "M278.665,0C124.656,0,0,124.635,0,278.665c0,8.292,6.722,15.014,15.014,15.014h263.651" +
                "c8.292,0,15.014-6.722,15.014-15.014V15.014C293.679,6.722,286.957,0,278.665,0z" +

                "M171.846,337.086c-2.634-4.81-7.683-7.8-13.167-7.8H69.885c-4.779,0-9.274,2.275-12.102,6.129" +
                "c-2.829,3.854-3.653,8.822-2.222,13.382c28.279,90.069,109.845,157.033,208.09,163.202v-112.54" +
                "C225.117,394.677,190.806,371.7,171.846,337.086z" +

                "M348.797,55.562c-4.559-1.43-9.53-0.605-13.382,2.222c-3.854,2.829-6.129,7.323-6.129,12.103v88.793" +
                "c0,5.483,2.991,10.531,7.8,13.166c34.612,18.962,57.59,53.272,62.372,91.805h112.541" +
                "C505.815,165.193,438.653,83.775,348.797,55.562z" +

                "M399.477,293.678c-6.811,55.148-50.65,98.987-105.798,105.798v112.512c117.153-7.374,210.925-100.997,218.309-218.31" +
                "H399.477z\""
        );

    }

    private void showDisplayImage() throws IOException {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("DisplayImage.fxml") );
        Stage stage = new Stage(StageStyle.DECORATED);
        stage.setScene(new Scene((Pane) loader.load()));
        DisplayImage displayImage = loader.<DisplayImage>getController();
        displayImage.initData(this);
        stage.show();
    }

    public Image getImage() {
        return image;
    }

    public String getName() {
        return name;
    }
}
